spring.application.name=service-supervision
server.port=8109
# EUREKA
eureka.client.serviceUrl.defaultZone=@eurekaUri@
eureka.instance.prefer-ip-address=true
# Mongo
spring.data.mongodb.uri=@spring.data.mongodb.uri@
spring.data.mongodb.database=@spring.data.mongodb.database@
# RabbitMQ
#RabbitMQ\u96C6\u7FA4\uFF0Caddresses\u4E00\u5B9A\u8981\u9017\u53F7\u5206\u9694
spring.rabbitmq.addresses=@spring.rabbitmq.addresses@
spring.rabbitmq.username=@spring.rabbitmq.username@
spring.rabbitmq.password=@spring.rabbitmq.password@
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.virtual-host=/
eureka.client.registryFetchIntervalSeconds=5
#�������ʱ������,�������ʱ��û�н��յ�����EurekaServer�ͻὫ���ʵ���޳� #ע�⣬EurekaServerһ��Ҫ����
#eureka.server.eviction-interval-timer-in-ms�������������Ч���������һ��Ϊ����ˢ��ʱ�����õ����� #Ĭ��90s

eureka.client.healthcheck.enabled = true
eureka.instance.lease-renewal-interval-in-seconds =10
eureka.instance.lease-expiration-duration-in-seconds =30

#令执行超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=300000
#设置隔离方式
hystrix.command.default.execution.isolation.strategy=THREAD
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=3500
hystrix.command.default.circuitBreaker.requestVolumeThreshold=1000
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=50

#ribbon (read + connect)*2 < hystrix timeoutInMilliseconds
ribbon.ReadTimeout=70000
ribbon.ConnectTimeout=70000
#在Spring Cloud Ribbon与Spring Cloud Eureka结合的工程中，我们可以通过参数禁用Eureka对Ribbon服务实例的维护实现。这时又需要自己去维护服务实例列表了。
ribbon.eureka.enabled=true
